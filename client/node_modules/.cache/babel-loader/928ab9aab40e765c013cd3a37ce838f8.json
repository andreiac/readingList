{"ast":null,"code":"import _classCallCheck from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/src/containers/Search/index.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport SearchForm from \"../../components/SearchForm\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport SearchResults from \"../../components/SearchResults\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"\",\n      books: [],\n      results: [],\n      error: \"\"\n    };\n\n    _this.handleSearchClick = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        search: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.getBooks(_this.state.search).then(function (res) {\n        _this.populateBooks = function () {\n          for (var i = 0; i < res.data.items.length; i++) {\n            console.log(\"if you can read this, then populatebooks( ) is working\");\n            var bookDiv = \"<div> Title: \" + res.data.items[i].volumeInfo.title + \"\\nAuthors: \" + res.data.items[i].volumeInfo.authors + \"Description: \" + res.data.items[i].volumeInfo.description;\n            var bookImage = \"<img>\";\n            bookImage.attr(\"src\", res.data.items[i].volumeInfo.imageLinks.thumbnail);\n            bookDiv.append(bookImage);\n          }\n        };\n\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n\n        _this.setState({\n          results: res.data.message,\n          error: \"\"\n        });\n      }).catch(function (err) {\n        return _this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    // When the component mounts, get a list of all available base breeds and update this.state.breeds\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getBooks().then(function (res) {\n        return _this2.setState({\n          books: res.data.message\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleSearchClick: this.handleSearchClick,\n        handleInputChange: this.handleInputChange,\n        books: this.state.books,\n        populateBooks: this.populateBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(SearchResults, {\n        populateBooks: this.populateBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" \"));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/src/containers/Search/index.js"],"names":["React","Component","API","SearchForm","Jumbotron","SearchResults","Search","state","search","books","results","error","handleSearchClick","getBooks","then","res","setState","data","catch","err","console","log","handleInputChange","event","target","value","handleFormSubmit","preventDefault","populateBooks","i","items","length","bookDiv","volumeInfo","title","authors","description","bookImage","attr","imageLinks","thumbnail","append","status","Error","message"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport SearchForm from \"../../components/SearchForm\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport SearchResults from \"../../components/SearchResults\"\n\n\nclass Search extends Component {\n  \n    state = {\n      search: \"\",\n      books: [],\n      results: [],\n      error: \"\"\n\n  };\n\n\n\n  \n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    \n    API.getBooks()\n      .then(res => this.setState({ books: res.data.message }))\n      .catch(err => console.log(err));\n  };\n\n  \n  handleSearchClick = () => {\n    API.getBooks()\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getBooks(this.state.search)\n      .then(res => {\n\n        this.populateBooks=()=>{\n          for (let i = 0; i < res.data.items.length; i++) {\n            console.log(\"if you can read this, then populatebooks( ) is working\")\n            let bookDiv = (\"<div> Title: \"+res.data.items[i].volumeInfo.title + \"\\nAuthors: \" + res.data.items[i].volumeInfo.authors+ \"Description: \"+res.data.items[i].volumeInfo.description);\n            let bookImage = (\"<img>\");\n            bookImage.attr(\"src\", res.data.items[i].volumeInfo.imageLinks.thumbnail);\n            bookDiv.append(bookImage);\n    \n        }\n      };\n        \n\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" }\n        );\n\n      })\n      .catch(err => this.setState({ error: err.message }));\n  };\n  render() {\n    return (\n      <div>\n        \n        \n        <Jumbotron></Jumbotron>\n          \n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleSearchClick={this.handleSearchClick}\n            handleInputChange={this.handleInputChange}\n            books={this.state.books}\n            populateBooks={this.populateBooks}\n\n\n          />\n          \n      <SearchResults\n      populateBooks={this.populateBooks}\n\n      > </SearchResults>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}