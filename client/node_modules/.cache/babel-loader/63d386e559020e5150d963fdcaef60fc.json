{"ast":null,"code":"import _classCallCheck from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/src/containers/Search/index.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport SearchForm from \"../../components/SearchForm\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport SearchResults from \"../../components/SearchResults\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"\",\n      books: [],\n      results: [],\n      error: \"\"\n    };\n\n    _this.populateBooks = function () {\n      var res = [];\n\n      for (var i = 0; i < res.data.items.length; i++) {\n        var bookDiv = \"<div>\";\n        var bookImage = \"<img>\";\n        bookImage.attr(\"src\", res.data.items[i].volumeInfo.imageLinks.thumbnail);\n        bookDiv.prepend(bookImage);\n        \"#books\".append(bookImage);\n      }\n    };\n\n    _this.handleSearchClick = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        search: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.getBooks(_this.state.search).then(function (res) {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n\n        _this.setState({\n          results: res.data.message,\n          error: \"\"\n        });\n\n        console.log(\"Title: \" + res.data.items[0].volumeInfo.title, +\"Authors: \" + res.data.items[0].volumeInfo.authors, res.data.items[0].volumeInfo.description, res.data.items[0].volumeInfo.imageLinks.thumbnail);\n      }).catch(function (err) {\n        return _this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    // When the component mounts, get a list of all available base breeds and update this.state.breeds\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getBooks().then(function (res) {\n        return _this2.setState({\n          books: res.data.message\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleSearchClick: this.handleSearchClick,\n        handleInputChange: this.handleInputChange,\n        books: this.state.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(SearchResults, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \" \"));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/andreia/coding_bootcamp/Homework/BookSearch/readingList/client/src/containers/Search/index.js"],"names":["React","Component","API","SearchForm","Jumbotron","SearchResults","Search","state","search","books","results","error","populateBooks","res","i","data","items","length","bookDiv","bookImage","attr","volumeInfo","imageLinks","thumbnail","prepend","append","handleSearchClick","getBooks","then","setState","catch","err","console","log","handleInputChange","event","target","value","handleFormSubmit","preventDefault","status","Error","message","title","authors","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport SearchForm from \"../../components/SearchForm\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport SearchResults from \"../../components/SearchResults\"\n\n\nclass Search extends Component {\n  \n    state = {\n      search: \"\",\n      books: [],\n      results: [],\n      error: \"\"\n\n  };\n\n\n\n  \n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    \n    API.getBooks()\n      .then(res => this.setState({ books: res.data.message }))\n      .catch(err => console.log(err));\n  };\n\n  populateBooks=()=>{\n    let res=[];\n      \n    for (var i = 0; i < res.data.items.length; i++) {\n        var bookDiv = (\"<div>\");\n\n        var bookImage = (\"<img>\");\n        bookImage.attr(\"src\", res.data.items[i].volumeInfo.imageLinks.thumbnail);\n\n        bookDiv.prepend(bookImage);\n\n        (\"#books\").append(bookImage);\n\n\n    }\n  };\n\n  handleSearchClick = () => {\n    API.getBooks()\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getBooks(this.state.search)\n      .then(res => {\n\n\n        \n\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" }\n        );\n\n        \n        console.log(\"Title: \" + res.data.items[0].volumeInfo.title, + \"Authors: \" + res.data.items[0].volumeInfo.authors, res.data.items[0].volumeInfo.description, res.data.items[0].volumeInfo.imageLinks.thumbnail);\n\n      })\n      .catch(err => this.setState({ error: err.message }));\n    \n  };\n  render() {\n    return (\n      <div>\n        \n        \n        <Jumbotron></Jumbotron>\n          \n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleSearchClick={this.handleSearchClick}\n            handleInputChange={this.handleInputChange}\n            books={this.state.books}\n          />\n      <SearchResults> </SearchResults>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}